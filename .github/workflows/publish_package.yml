name: Publish NuGet Package on Release

on:
  release:
    types: [published]
  workflow_dispatch:  # Erlaubt manuelles Auslösen des Workflows über die GitHub-Oberfläche

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          VERSION="${TAG_NAME#"v"}"
          echo "Extracted version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

  build_package:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' 
      
      - name: Restore dependencies
        run: dotnet restore src/Messaging/Messaging.csproj
      
      - name: Build
        run: dotnet build src/Messaging/Messaging.csproj --no-restore --configuration Release
      
      - name: Pack
        run: |
          echo "Using version $VERSION from setup job."
          dotnet pack src/Messaging/Messaging.csproj --no-build --configuration Release -p:PackageVersion=$VERSION -o nupkgs
        env:
          VERSION: ${{ needs.setup.outputs.version }}
      
  publish_github:
    needs: build_package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' 

      - name: Publish to GitHub Packages
        run: |
          echo "Publishing NuGet package to GitHub Packages."
          dotnet nuget push "nupkgs/*.nupkg" --source "github" --skip-duplicate

  publish_nuget:
    needs: build_package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' 

      - name: Publish to NuGet.org
        run: |
          echo "Publishing NuGet package to NuGet.org."
          dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
