# dotnet.yml ist ein GitHub Actions Workflow, der die Erstellung von NuGet-Paketen für ein .NET-Projekt ermöglicht.
name: .NET CI/CD

# Versionierungsstrategie:
# Für den main-Branch werden Releases mit der in der .csproj-Datei festgelegten Version erstellt,
# die manuell vor dem Merge angepasst werden sollte. Dies ermöglicht eine präzise Kontrolle über Major und Minor Releases.
# Für alle anderen Branches werden automatische Zwischenreleases mit einem Datumssuffix generiert, um kontinuierliches Testing und Feedback
# für Entwicklungsstände zu ermöglichen. Das Datumssuffix wird basierend auf dem aktuellen Datum und der Uhrzeit zum Zeitpunkt des Builds hinzugefügt,
# was jede Version einzigartig macht.

on:
  push:
    branches:
      - '**'

permissions:
  contents: write  # Erlaubt das Erstellen von Releases und das Schreiben von Tags.
  pull-requests: read  # Ermöglicht das Lesen von PR-Informationen für den Release-Entwurf.

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    env:
      PROJECT_FILE: src/Messaging/Messaging.csproj

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore ${{ env.PROJECT_FILE }}

      - name: Test
        run: dotnet test ${{ env.PROJECT_FILE }}

  release_draft:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v4
      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: 'release-drafter-config.yml'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}