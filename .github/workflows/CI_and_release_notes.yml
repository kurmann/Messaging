# CI_and_release_notes.yml
name: CI and Release Notes

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Install dependencies
        run: dotnet restore src/Messaging/Messaging.csproj
      - name: Build
        run: dotnet build src/Messaging/Messaging.csproj --no-restore
      - name: Test
        run: dotnet test src/Messaging/Messaging.csproj --no-build

  # Der `update_release_draft_and_package`-Job verantwortet zwei Hauptfunktionen:
  # 1. Er führt den Release Drafter aus, wenn ein Pull Request in den Hauptbranch gemerged wird.
  #    Dies dient dazu, einen Release-Entwurf zu erstellen oder zu aktualisieren, der die Änderungen aus dem Pull Request enthält.
  # 2. Er führt die Paketierung aus, wenn ein Pull Request gemerged oder geschlossen wird. Der Schritt nutzt den Namen des Feature-Branches
  #    oder den Tag, der an den Commit angehängt ist, um die Versionsnummer für das NuGet-Paket zu bestimmen. Diese Paketierung geschieht
  #    nur für Pull Requests, um zu gewährleisten, dass nur geprüfte und verifizierte Änderungen in Paketform veröffentlicht werden.
  # Die `if`-Bedingungen innerhalb der Schritte stellen sicher, dass die Aktionen nur unter den definierten Umständen ausgeführt werden,
  # um die Genauigkeit des Release-Managements und der Paketveröffentlichung zu gewährleisten.
  update_release_draft_and_package:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v4
      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        if: github.event.pull_request.merged == true
        with:
          config-name: 'release-drafter-config.yml'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Package
        if: github.event.pull_request.merged == true || github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          VERSION=$(echo "${{ github.event.pull_request.head.ref }}" | sed 's/refs\/tags\///')
          dotnet pack src/Messaging/Messaging.csproj -p:PackageVersion=$VERSION --no-build -o nupkgs
